image: atlassian/default-image:2

infoStep: &infoStep
  - step:
      name: Info
      script:
        - node --version
        - npm --version
prepareStep: &prepareStep
  - step:
      name: Prepare
      script:
        - npm install
      artifacts:
        - node_modules/**
sonarStep: &sonarStep
  - step:
      name: Sonar Scanner
      script:
        - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873.zip
        - unzip ./sonar-scanner-cli-4.2.0.1873.zip
        - chmod +x sonar-scanner-4.2.0.1873/bin/sonar-scanner
        - sonar-scanner-4.2.0.1873/bin/sonar-scanner -Dsonar.exclusions=sonar-scanner-4.2.0.1873.zip,sonar-scanner-4.2.0.1873/**/*,vendor/**/* -Dsonar.login=admin -Dsonar.password=admin -Dsonar.projectKey=sonar -Dsonar.projectName=sonar -Dsonar.projectVersion=1.0 -Dsonar.sources=.  -Dsonar.host.url=http://54.174.170.210:9000 -Dsonar.sourceEncoding=UTF-8 -Dsonar.analysis.mode=publish 
        - echo "http://54.174.170.210:9000/dashboard/index/sonar"

securityStep: &securityStep
  - step:
      name: Security
      script:
        - npm install npm@latest -g
        - npm audit --only=prod && npm audit fix
        - npm run test
buildStep: &buildStep
  - step:
      name: Build
      script:
        - npm run build
      artifacts:
        - dist/**
        - build/**

deployS3AwsScript: &deployS3AwsScript
  - step:
      name: deployS3AwsScript
      script:
        - pipe: atlassian/aws-sam-deploy:0.3.2
          variables:
            S3_BUCKET: $AWS_BUCKET_NAME
            STACK_NAME: stack"_"$APPLICATION_ENVIRONMENT"_"$(date +%Y%m%d_%H%M%S)"_"$BITBUCKET_BUILD_NUMBER
            WAIT: 'true'
            WAIT_INTERVAL: 60
            CAPABILITIES: ['CAPABILITY_IAM', 'CAPABILITY_AUTO_EXPAND']
            STACK_PARAMETERS: >
              [{
                "ParameterKey": "WS_URL",
                "ParameterValue": "mykey"
              },
              {
                "ParameterKey": "WS_USER",
                "ParameterValue": "mydbuser"
              },
              {
                "ParameterKey": "WS_PASSWORD",
                "ParameterValue": "mydbuser"
              },
              {
                "ParameterKey": "WS_SECONDS_BULK_LOAD_RETRY",
                "ParameterValue": "10000"
              },
              {
                "ParameterKey": "WS_MAX_REQUEST_ATTEMPTS",
                "ParameterValue": "3"
              },
              {
                "ParameterKey": "PIM_URL",
                "ParameterValue": ""
              },
              {
                "ParameterKey": "PIM_USERNAME",
                "ParameterValue": "mykey"
              },
              {
                "ParameterKey": "PIM_CLIENT_ID",
                "ParameterValue": "mydbuser"
              },
              {
                "ParameterKey": "PIM_SECRET",
                "ParameterValue": ""
              },
               {
                "ParameterKey": "QUEUEE_URL",
                "ParameterValue": "mydbuser"
              },
              {
                "ParameterKey": "INTERV_TO_QUEUE",
                "ParameterValue": "5"
              },
               {
                "ParameterKey": "DEFAULT_STORE",
                "ParameterValue": ""
                }]
pipelines:    
  branches:
    develop:
      #- <<: *infoStep
      #- <<: *prepareStep
      #- <<: *sonarStep
      #- <<: *securityStep
     # - <<: *buildStep
      - <<: *deployS3AwsScript
    test:
      - <<: *infoStep
      - <<: *prepareStep
      - <<: *securityStep
      #- <<: *buildStep
      - step:
          name: Deploy to test
          trigger: manual
          deployment: test
          <<: *deployS3AwsScript
    master:
      - <<: *infoStep
      - <<: *prepareStep
      - <<: *securityStep
      #- <<: *buildStep
      - step:
          name: Deploy to production
          trigger: manual
          deployment: production
          <<: *deployS3AwsScript
 